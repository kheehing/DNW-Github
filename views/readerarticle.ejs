<!DOCTYPE html>
<html lang="en">
<head>
    <%- include ('base/head'); %>
    <title>Reader Article</title>
</head>
<body>
    <%- include ('base/navbar'); %>   
    <div class="container mt-4">
        <div class="d-flex justify-content-between">
            <a href="/reader" class="btn btn-secondary align-self-center">< Back to Reader Home</a>
            <h1 id="articleTitle"><strong>Title: </strong><%= article.title %></h1>
            <h2 id="articleSubtitle"><strong>Subtitle: </strong><%= article.subtitle %></h2>
            <p><strong>Author: </strong><%= article.author %></p>
        </div> 
        <p class="text-muted"><%= article.articleCreation %></p>
        <hr>
    </div>
    <div class="container mt-4 text-justify">
        <p><%= article.content %></p>
        <br><br>
    </div>
    
    <div class="container mt-4">
        <% if (userName == '') { %>
            <a href="" class="btn btn-primary" disabled>Like</a>
        <% } else { %>
            <button id="likeBtn" class="btn btn-primary"><%= userHasLiked ? 'Unlike' : 'Like' %></button>
        <% } %>
        <p id="likeCount">Likes: <span id="likesNumber"><%= article.likes %></span></p>
    </div>
    <div class="container mt-4">
        <h3 class="mb-3">Comments</h3>
        <% if (userName == '') { %>
            <form>
                <div class="form-group">
                    <label for="commentInput">Add comment:</label>
                    <textarea class="form-control" id="commentInput" name="commentInput" rows="3" disabled></textarea>
                </div>
                <button type="submit" class="btn btn-primary" disabled>Submit Comment</button>
            </form>
        <% } else { %>
            <form action="/reader/article/<%= article.id %>/comment" method="post">
                <div class="form-group">
                    <label for="commentInput">Add comment:</label>
                    <textarea class="form-control" id="commentInput" name="commentInput" rows="3"></textarea>
                </div>
                <button type="submit" class="btn btn-primary">Submit Comment</button>
            </form>
        <% } %>
        <div id="comments-container">
            <% comments.forEach((comment) => { %>
                <div class="card mb-3" id="comment-<%= comment.id %>">
                    <div class="card-body">
                        <p><strong><%= comment.username %></strong> <span class="text-muted" id="comment-<%= comment.id %>"> (Loading...) </span>: </p>
                        <p><%= comment.comments %></p>
                    </div>
                </div>
            <% }) %>
        </div>
    </div>
    <script>
        function getRelativeTime(past) {
          const msPerMinute = 60 * 1000;
          const msPerHour = msPerMinute * 60;
          const msPerDay = msPerHour * 24;
          const msPerMonth = msPerDay * 30;
          const msPerYear = msPerDay * 365;
    
          const elapsed = new Date() - new Date(past);
    
          if (elapsed < msPerMinute) {
            return 'Just now';
          } else if (elapsed < msPerHour) {
            return Math.round(elapsed / msPerMinute) + ' minutes ago';
          } else if (elapsed < msPerDay) {
            return Math.round(elapsed / msPerHour) + ' hours ago';
          } else if (elapsed < msPerMonth) {
            return 'about ' + Math.round(elapsed / msPerDay) + ' days ago';
          } else if (elapsed < msPerYear) {
            return 'about ' + Math.round(elapsed / msPerMonth) + ' months ago';
          } else {
            return 'about ' + Math.round(elapsed / msPerYear) + ' years ago';
          }
        }
    
        // update the comments' time
        function updateRelativeTimeForComments() {
            const comments = JSON.parse('<%- JSON.stringify(comments) %>'); // Get the comments data from the EJS template
            comments.forEach((comment) => {
            const commentElement = document.getElementById("comment-" + comment.id);
            const timeElement = commentElement.querySelector(".text-muted");
    
            // Calculate the new relative time and update the time element's content
            const relativeTime = getRelativeTime(comment.createdAt); // Use the getRelativeTime function from the client side
            timeElement.textContent = " (" + relativeTime + ")";
          });
        }
    
        // Update relative time for comments initially
        updateRelativeTimeForComments();
    
        // Set an interval to update the relative time every 30 seconds
        setInterval(updateRelativeTimeForComments, 30000);

        $(document).ready(function() {
            $('#likeBtn').click(function(e) {
                e.preventDefault();
        
                var articleId = '<%= article.id %>';  // get the article id from the EJS template
                var userHasLiked = '<%= userHasLiked %>';  // get the userHasLiked flag from the EJS template
                var likesCount = parseInt($('#likesNumber').text(), 10);  // get the current number of likes

                $.ajax({
                    url: '/reader/article/' + articleId + '/like',
                    type: 'POST',
                    success: function(response) {
                        if(response.liked) {
                            $('#likeBtn').text('Unlike');
                            $('#likesNumber').text(likesCount + 1);
                        } else {
                            $('#likeBtn').text('Like');
                            $('#likesNumber').text(likesCount - 1);
                        }
                    },
                    error: function(error) {
                        console.error('Error:', error);
                    }
                });
            });
        });
    </script>
</body>
</html>